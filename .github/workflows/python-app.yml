# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    container: python:3.12

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

      redis:
        image: redis
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379


    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.12
      uses: actions/setup-python@v3
      with:
        python-version: "3.12"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install ruff pytest isort
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Run ruff
      run: |
        ruff check
    - name: Run isort
      run: |
        isort . --check-only
    - name: Run tests
      run: |
        pytest
      env:
        DB_NAME: postgres
        DB_USER: postgres
        DB_PASSWORD: postgres
        DB_HOST: postgres
        DB_PORT: 5432
        REDIS_LOCATION: redis://redis:6379/?db=0
        REDIS_PASSWORD:
